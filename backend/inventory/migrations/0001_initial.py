# Generated by Django 4.2.23 on 2025-08-20 01:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import inventory.models
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Branch",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo?")),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Exclusão"
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "last_updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Filial",
                "verbose_name_plural": "Filiais",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo?")),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Exclusão"
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Altura (cm)",
                    ),
                ),
                (
                    "width",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Largura (cm)",
                    ),
                ),
                (
                    "depth",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Profundidade (cm)",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="Peso (kg)",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Exclusão"
                    ),
                ),
                ("sku", models.CharField(max_length=50, unique=True)),
                (
                    "ean",
                    models.CharField(
                        blank=True,
                        help_text="Código de barras EAN-13",
                        max_length=13,
                        null=True,
                        unique=True,
                        validators=[inventory.models.validate_ean],
                        verbose_name="EAN",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Ativo"),
                            ("DISCONTINUED", "Fora de Linha"),
                            ("INACTIVE", "Inativo"),
                        ],
                        default="ACTIVE",
                        max_length=12,
                    ),
                ),
                (
                    "origin",
                    django_countries.fields.CountryField(
                        blank=True, max_length=2, verbose_name="País de Origem"
                    ),
                ),
                ("cfop", models.CharField(blank=True, help_text="CFOP", max_length=4)),
                (
                    "photo",
                    models.ImageField(blank=True, null=True, upload_to="item_photos/"),
                ),
                ("brand", models.CharField(blank=True, max_length=50)),
                ("internal_code", models.CharField(blank=True, max_length=50)),
                ("manufacturer_code", models.CharField(blank=True, max_length=50)),
                ("short_description", models.CharField(blank=True, max_length=255)),
                ("long_description", models.TextField(blank=True)),
                (
                    "warranty_days",
                    models.IntegerField(default=0, verbose_name="Garantia (dias)"),
                ),
                (
                    "purchase_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "sale_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "unit_of_measure",
                    models.CharField(
                        default="UN", max_length=20, verbose_name="Unidade de Medida"
                    ),
                ),
                ("minimum_stock_level", models.IntegerField(default=0)),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="items",
                        to="inventory.branch",
                        verbose_name="Filial Principal do Item",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="items",
                        to="inventory.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "last_updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo?")),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Exclusão"
                    ),
                ),
                (
                    "location_code",
                    models.CharField(
                        help_text="Código único para a locação dentro da filial",
                        max_length=50,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nome descritivo (ex: Prateleira de Parafusos)",
                        max_length=100,
                    ),
                ),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="locations",
                        to="inventory.branch",
                        verbose_name="Filial",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "last_updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Locação",
                "verbose_name_plural": "Locações",
            },
        ),
        migrations.CreateModel(
            name="MovementType",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo?")),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Exclusão"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Código único para referência rápida (ex: ENTRADA, DEVSAIDA)",
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Z0-9_]+$",
                                "Use apenas letras maiúsculas, números e underscores",
                            )
                        ],
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nome descritivo do tipo de movimento",
                        max_length=100,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[a-zA-Z0-9 áéíóúÁÉÍÓÚãõâêîôûÃÕÂÊÎÔÛ]+$"
                            )
                        ],
                    ),
                ),
                (
                    "factor",
                    models.IntegerField(
                        choices=[
                            (1, "Adicionar ao Estoque"),
                            (-1, "Subtrair do Estoque"),
                        ],
                        help_text="Define se a operação é de entrada ou saída no estoque",
                    ),
                ),
                (
                    "units_per_package",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Para operações com pacotes/caixas, define o fator multiplicador",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("IN", "Entrada"),
                            ("OUT", "Saída"),
                            ("ADJ", "Ajuste"),
                            ("TRF", "Transferência"),
                            ("PROD", "Produção"),
                            ("QUAL", "Controle de Qualidade"),
                        ],
                        default="IN",
                        help_text="Categoria operacional do movimento",
                        max_length=5,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("NF", "Nota Fiscal"),
                            ("OS", "Ordem de Serviço"),
                            ("TKT", "Ticket"),
                            ("INT", "Documento Interno"),
                            ("N/A", "Não Aplicável"),
                        ],
                        default="NF",
                        help_text="Tipo de documento associado a este movimento",
                        max_length=5,
                    ),
                ),
                (
                    "requires_approval",
                    models.BooleanField(
                        default=False,
                        help_text="Movimentos deste tipo exigem aprovação prévia",
                    ),
                ),
                (
                    "affects_finance",
                    models.BooleanField(
                        default=True,
                        help_text="Este tipo de movimento impacta no cálculo financeiro?",
                    ),
                ),
                (
                    "is_locked",
                    models.BooleanField(
                        default=False,
                        help_text="Tipos bloqueados não podem ser editados",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Descrição detalhada das regras e uso deste tipo",
                    ),
                ),
                (
                    "allowed_for_groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Grupos com permissão para usar este tipo de movimento",
                        to="auth.group",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "last_updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
                (
                    "parent_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="Tipo de movimento pai para herança de propriedades",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="child_types",
                        to="inventory.movementtype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tipo de Movimento",
                "verbose_name_plural": "Tipos de Movimento",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="Sector",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo?")),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Exclusão"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Nome do Setor"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sectors",
                        to="inventory.branch",
                        verbose_name="Filial",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "last_updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Setor",
                "verbose_name_plural": "Setores",
                "unique_together": {("branch", "name")},
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                (
                    "job_title",
                    models.CharField(blank=True, max_length=100, verbose_name="Cargo"),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Telefone"
                    ),
                ),
                (
                    "hire_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Contratação"
                    ),
                ),
                (
                    "branches",
                    models.ManyToManyField(
                        blank=True,
                        to="inventory.branch",
                        verbose_name="Filiais de Acesso",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_team",
                        to="inventory.userprofile",
                        verbose_name="Gerente Direto",
                    ),
                ),
                (
                    "sectors",
                    models.ManyToManyField(
                        blank=True,
                        to="inventory.sector",
                        verbose_name="Setores de Atuação",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SystemSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "default_branch",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory.branch",
                        verbose_name="Filial Padrão para Novos Usuários",
                    ),
                ),
                (
                    "default_sector",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory.sector",
                        verbose_name="Setor Padrão para Novos Usuários",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configurações do Sistema",
            },
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                (
                    "country",
                    django_countries.fields.CountryField(
                        default="BR", max_length=2, verbose_name="País"
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(blank=True, max_length=10, verbose_name="CEP"),
                ),
                (
                    "address_line_1",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Endereço (Rua, Av.)"
                    ),
                ),
                (
                    "address_line_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Número e Complemento"
                    ),
                ),
                (
                    "neighborhood",
                    models.CharField(blank=True, max_length=100, verbose_name="Bairro"),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="Cidade"),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Estado/Província"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo?")),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Exclusão"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=150, verbose_name="Nome/Razão Social"),
                ),
                (
                    "tax_regime",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("SIMPLE", "Simples Nacional"),
                            ("MEI", "MEI"),
                            ("REAL", "Lucro Real"),
                            ("PRESUMED", "Lucro Presumido"),
                            ("OTHER", "Outro"),
                        ],
                        max_length=10,
                        verbose_name="Regime Tributário",
                    ),
                ),
                (
                    "cnpj",
                    models.CharField(
                        blank=True, max_length=18, verbose_name="CNPJ (se brasileiro)"
                    ),
                ),
                (
                    "tax_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        verbose_name="ID Fiscal (se estrangeiro)",
                    ),
                ),
                (
                    "contact_person",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Pessoa de Contato"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Telefone de Contato"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="E-mail de Contato"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "last_updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
                (
                    "parent_supplier",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="branches",
                        to="inventory.supplier",
                        verbose_name="Fornecedor Matriz",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="StockMovement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("quantity", models.PositiveIntegerField()),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Preço unitário no momento da movimentação (compra ou venda)",
                        max_digits=10,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "attachment",
                    models.FileField(blank=True, null=True, upload_to="movement_docs/"),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="movements",
                        to="inventory.item",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="location_movements",
                        to="inventory.location",
                    ),
                ),
                (
                    "movement_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inventory.movementtype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="item",
            name="supplier",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="supplied_items",
                to="inventory.supplier",
            ),
        ),
        migrations.CreateModel(
            name="HistoricalMovementType",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Última Atualização"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo?")),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Exclusão"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        help_text="Código único para referência rápida (ex: ENTRADA, DEVSAIDA)",
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Z0-9_]+$",
                                "Use apenas letras maiúsculas, números e underscores",
                            )
                        ],
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="Nome descritivo do tipo de movimento",
                        max_length=100,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[a-zA-Z0-9 áéíóúÁÉÍÓÚãõâêîôûÃÕÂÊÎÔÛ]+$"
                            )
                        ],
                    ),
                ),
                (
                    "factor",
                    models.IntegerField(
                        choices=[
                            (1, "Adicionar ao Estoque"),
                            (-1, "Subtrair do Estoque"),
                        ],
                        help_text="Define se a operação é de entrada ou saída no estoque",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("IN", "Entrada"),
                            ("OUT", "Saída"),
                            ("ADJ", "Ajuste"),
                            ("TRF", "Transferência"),
                            ("PROD", "Produção"),
                            ("QUAL", "Controle de Qualidade"),
                        ],
                        default="IN",
                        help_text="Categoria operacional do movimento",
                        max_length=5,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("NF", "Nota Fiscal"),
                            ("OS", "Ordem de Serviço"),
                            ("TKT", "Ticket"),
                            ("INT", "Documento Interno"),
                            ("N/A", "Não Aplicável"),
                        ],
                        default="NF",
                        help_text="Tipo de documento associado a este movimento",
                        max_length=5,
                    ),
                ),
                (
                    "requires_approval",
                    models.BooleanField(
                        default=False,
                        help_text="Movimentos deste tipo exigem aprovação prévia",
                    ),
                ),
                (
                    "affects_finance",
                    models.BooleanField(
                        default=True,
                        help_text="Este tipo de movimento impacta no cálculo financeiro?",
                    ),
                ),
                (
                    "is_locked",
                    models.BooleanField(
                        default=False,
                        help_text="Tipos bloqueados não podem ser editados",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Descrição detalhada das regras e uso deste tipo",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_updated_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
                (
                    "parent_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Tipo de movimento pai para herança de propriedades",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="inventory.movementtype",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Tipo de Movimento",
                "verbose_name_plural": "historical Tipos de Movimento",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="CategoryGroup",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo?")),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Exclusão"
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "last_updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="category",
            name="group",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="categories",
                to="inventory.categorygroup",
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="last_updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Atualizado por",
            ),
        ),
        migrations.CreateModel(
            name="StockItem",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo?")),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Exclusão"
                    ),
                ),
                ("quantity", models.IntegerField(default=0)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="stock_items",
                        to="inventory.item",
                    ),
                ),
                (
                    "last_updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="stock_items",
                        to="inventory.location",
                    ),
                ),
            ],
            options={
                "verbose_name": "Saldo de Estoque",
                "verbose_name_plural": "Saldos de Estoque",
                "unique_together": {("item", "location")},
            },
        ),
        migrations.AddIndex(
            model_name="movementtype",
            index=models.Index(
                fields=["is_active"], name="inventory_m_is_acti_555e31_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="movementtype",
            index=models.Index(
                fields=["category"], name="inventory_m_categor_da9736_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="movementtype",
            index=models.Index(fields=["code"], name="inventory_m_code_947e7b_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="location",
            unique_together={("branch", "location_code")},
        ),
    ]
