# Generated by Django 4.2.23 on 2025-08-11 22:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        (
            "addresses",
            "0009_alter_city_id_alter_neighborhood_id_alter_state_id_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Branch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Filial",
                "verbose_name_plural": "Filiais",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo?")),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sku", models.CharField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Ativo"),
                            ("DISCONTINUED", "Fora de Linha"),
                            ("INACTIVE", "Inativo"),
                        ],
                        default="ACTIVE",
                        max_length=12,
                    ),
                ),
                (
                    "origin",
                    django_countries.fields.CountryField(
                        blank=True, max_length=2, verbose_name="País de Origem"
                    ),
                ),
                ("cfop", models.CharField(blank=True, help_text="CFOP", max_length=4)),
                (
                    "photo",
                    models.ImageField(blank=True, null=True, upload_to="item_photos/"),
                ),
                ("brand", models.CharField(blank=True, max_length=50)),
                ("internal_code", models.CharField(blank=True, max_length=50)),
                ("manufacturer_code", models.CharField(blank=True, max_length=50)),
                ("short_description", models.CharField(blank=True, max_length=255)),
                ("long_description", models.TextField(blank=True)),
                (
                    "weight",
                    models.FloatField(blank=True, help_text="Peso em kg", null=True),
                ),
                ("unit_of_measure", models.CharField(default="Peça", max_length=50)),
                (
                    "purchase_price",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("sale_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("minimum_stock_level", models.PositiveIntegerField(default=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="items",
                        to="inventory.category",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="Usuário que cadastrou o item.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "location_code",
                    models.CharField(
                        help_text="Código único para a locação dentro da filial",
                        max_length=50,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nome descritivo (ex: Prateleira de Parafusos)",
                        max_length=100,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="A locação está ativa e pode ser usada?"
                    ),
                ),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="locations",
                        to="inventory.branch",
                        verbose_name="Filial",
                    ),
                ),
            ],
            options={
                "verbose_name": "Locação",
                "verbose_name_plural": "Locações",
                "unique_together": {("branch", "location_code")},
            },
        ),
        migrations.CreateModel(
            name="MovementType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "factor",
                    models.IntegerField(
                        choices=[
                            (1, "Adicionar ao Estoque"),
                            (-1, "Subtrair do Estoque"),
                        ],
                        help_text="Define se a operação é de entrada ou saída.",
                    ),
                ),
                (
                    "units_per_package",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Para operações com pacotes/caixas, define o fator multiplicador.",
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Tipos inativos não aparecerão em novas movimentações.",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Sector",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Nome do Setor"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Descrição")),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo?")),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sectors",
                        to="inventory.branch",
                        verbose_name="Filial",
                    ),
                ),
            ],
            options={
                "verbose_name": "Setor",
                "verbose_name_plural": "Setores",
                "unique_together": {("branch", "name")},
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "job_title",
                    models.CharField(blank=True, max_length=100, verbose_name="Cargo"),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Telefone"
                    ),
                ),
                (
                    "hire_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Contratação"
                    ),
                ),
                (
                    "branches",
                    models.ManyToManyField(
                        blank=True,
                        to="inventory.branch",
                        verbose_name="Filiais de Acesso",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_team",
                        to="inventory.userprofile",
                        verbose_name="Gerente Direto",
                    ),
                ),
                (
                    "sectors",
                    models.ManyToManyField(
                        blank=True,
                        to="inventory.sector",
                        verbose_name="Setores de Atuação",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=150, verbose_name="Nome/Razão Social"),
                ),
                (
                    "country",
                    django_countries.fields.CountryField(
                        default="BR", max_length=2, verbose_name="País"
                    ),
                ),
                (
                    "tax_regime",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("SIMPLE", "Simples Nacional"),
                            ("MEI", "MEI"),
                            ("REAL", "Lucro Real"),
                            ("PRESUMED", "Lucro Presumido"),
                            ("OTHER", "Outro"),
                        ],
                        max_length=10,
                        verbose_name="Regime Tributário",
                    ),
                ),
                (
                    "cnpj",
                    models.CharField(
                        blank=True, max_length=18, verbose_name="CNPJ (se brasileiro)"
                    ),
                ),
                (
                    "tax_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        verbose_name="ID Fiscal (se estrangeiro)",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo?")),
                (
                    "contact_person",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Pessoa de Contato"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Telefone de Contato"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="E-mail de Contato"
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="addresses.city",
                        verbose_name="Cidade",
                    ),
                ),
                (
                    "parent_supplier",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="branches",
                        to="inventory.supplier",
                        verbose_name="Fornecedor Matriz",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StockMovement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField()),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Preço unitário no momento da movimentação (compra ou venda)",
                        max_digits=10,
                    ),
                ),
                ("movement_date", models.DateTimeField(auto_now_add=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "attachment",
                    models.FileField(blank=True, null=True, upload_to="movement_docs/"),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movements",
                        to="inventory.item",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location_movements",
                        to="inventory.location",
                    ),
                ),
                (
                    "movement_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inventory.movementtype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="item",
            name="supplier",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="supplied_items",
                to="inventory.supplier",
            ),
        ),
        migrations.CreateModel(
            name="StockItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(default=0)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_items",
                        to="inventory.item",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_locations",
                        to="inventory.location",
                    ),
                ),
            ],
            options={
                "unique_together": {("item", "location")},
            },
        ),
    ]
