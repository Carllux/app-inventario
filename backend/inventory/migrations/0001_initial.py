# Generated by Django 5.2.4 on 2025-08-08 13:11

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "warehouse",
                    models.CharField(
                        help_text="Nome do armazém ou área principal", max_length=100
                    ),
                ),
                (
                    "shelf",
                    models.CharField(
                        blank=True,
                        help_text="Ex: Corredor A, Prateleira 3",
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("contact_person", models.CharField(blank=True, max_length=100)),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\+?[\\d\\s-]{8,20}$"
                            )
                        ],
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        help_text="Stock Keeping Unit ou Código Único do Produto",
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Ativo"),
                            ("DISCONTINUED", "Fora de Linha"),
                            ("INACTIVE", "Inativo"),
                        ],
                        default="ACTIVE",
                        max_length=12,
                    ),
                ),
                (
                    "photo",
                    models.ImageField(blank=True, null=True, upload_to="item_photos/"),
                ),
                ("brand", models.CharField(blank=True, max_length=50)),
                (
                    "purchase_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                (
                    "sale_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Preço de Venda para o cliente",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                ("unit_of_measure", models.CharField(default="Peça", max_length=50)),
                ("origin", models.CharField(blank=True, max_length=100)),
                (
                    "weight",
                    models.FloatField(blank=True, help_text="Peso em kg", null=True),
                ),
                (
                    "minimum_stock_level",
                    models.PositiveIntegerField(
                        default=10,
                        help_text="Nível mínimo para alerta de estoque baixo",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("internal_code", models.CharField(blank=True, max_length=50)),
                ("manufacturer_code", models.CharField(blank=True, max_length=50)),
                ("long_description", models.TextField(blank=True)),
                ("short_description", models.CharField(blank=True, max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="items",
                        to="inventory.category",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="supplied_items",
                        to="inventory.supplier",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StockMovement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity_change", models.IntegerField()),
                (
                    "movement_type",
                    models.CharField(
                        choices=[
                            ("ENTRY", "Entrada (Compra)"),
                            ("EXIT", "Saída (Venda)"),
                            ("INTERNAL", "Uso Interno"),
                            ("ADJUSTMENT", "Ajuste de Inventário"),
                        ],
                        max_length=10,
                    ),
                ),
                ("movement_date", models.DateTimeField(auto_now_add=True)),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Mensagem personalizada, motivo do ajuste, etc.",
                    ),
                ),
                (
                    "attachment",
                    models.FileField(
                        blank=True,
                        help_text="Anexo de documento (Ex: Nota Fiscal, Requisição)",
                        null=True,
                        upload_to="movement_docs/",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movements",
                        to="inventory.item",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location_movements",
                        to="inventory.location",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StockItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=0)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_items",
                        to="inventory.item",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_locations",
                        to="inventory.location",
                    ),
                ),
            ],
            options={
                "unique_together": {("item", "location")},
            },
        ),
    ]
